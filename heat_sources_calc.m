function q = heat_sources_calc(p, phi_sn, phi_sp, phi_e, ce, ...
    cs_surf_n, cs_surf_p, T, jn, jp, jn_mean, jp_mean, I_flux)
% heat_sources_calc computes the heat generation which is used in the
% thermal model

global Nn Nsep Np Nccn Nccp Tref

delta_xn = p.L_n/Nn;
delta_xsep = p.L_s/Nsep;
delta_xp = p.L_p/Np;

ce = ce*p.c_e;
cs_surf_n = cs_surf_n*p.c_s_n_max;
cs_surf_p = cs_surf_p*p.c_s_p_max;
jn = jn*jn_mean;
jp = jp*jp_mean;
T = T*Tref;

dphisndx = [(-3*phi_sn(1,1)+4*phi_sn(2,1)-phi_sn(3,1))/2/delta_xn;...
    (phi_sn(3:end,1)-phi_sn(1:end-2,1))/2/delta_xn;...
    (3*phi_sn(end,1)-4*phi_sn(end-1,1)+phi_sn(end-2,1))/2/delta_xn];

dphispdx = [(-3*phi_sp(1,1)+4*phi_sp(2,1)-phi_sp(3,1))/2/delta_xp;...
    (phi_sp(3:end,1)-phi_sp(1:end-2,1))/2/delta_xp;...
    (3*phi_sp(end,1)-4*phi_sp(end-1,1)+phi_sp(end-2,1))/2/delta_xp];

dphiedx = [(-3*phi_e(1,1)+4*phi_e(2,1)-phi_e(3,1))/2/delta_xn;...
    (phi_e(3:Nn,1)-phi_e(1:Nn-2,1))/2/delta_xn;...
    (phi_e(Nn+1,1)-phi_e(Nn-1,1))/(delta_xn/2*3+delta_xsep/2);...
    (phi_e(Nn+2,1)-phi_e(Nn,1))/(delta_xn/2+delta_xsep/2*3);...
    (phi_e(Nn+3:Nn+Nsep,1)-phi_e(Nn+1:Nn+Nsep-2,1))/2/delta_xsep;...
    (phi_e(Nn+Nsep+1,1)-phi_e(Nn+Nsep-1,1))/(delta_xsep/2*3+delta_xp/2);...
    (phi_e(Nn+Nsep+2,1)-phi_e(Nn+Nsep,1))/(delta_xsep/2+delta_xp/2*3);...
    (phi_e(Nn+Nsep+3:end,1)-phi_e(Nn+Nsep+1:end-2))/2/delta_xp;...
    (3*phi_e(end,1)-4*phi_e(end-1,1)+phi_e(end-2,1))/2/delta_xp];

dcedx = [(-3*ce(1,1)+4*ce(2,1)-ce(3,1))/2/delta_xn;...
    (ce(3:Nn,1)-ce(1:Nn-2,1))/2/delta_xn;...
    (ce(Nn+1,1)-ce(Nn-1,1))/(delta_xn/2*3+delta_xsep/2);...
    (ce(Nn+2,1)-ce(Nn,1))/(delta_xn/2+delta_xsep/2*3);...
    (ce(Nn+3:Nn+Nsep,1)-ce(Nn+1:Nn+Nsep-2,1))/2/delta_xsep;...
    (ce(Nn+Nsep+1,1)-ce(Nn+Nsep-1,1))/(delta_xsep/2*3+delta_xp/2);...
    (ce(Nn+Nsep+2,1)-ce(Nn+Nsep,1))/(delta_xsep/2+delta_xp/2*3);...
    (ce(Nn+Nsep+3:end,1)-ce(Nn+Nsep+1:end-2))/2/delta_xp;...
    (3*ce(end,1)-4*ce(end-1,1)+ce(end-2,1))/2/delta_xp];

% heat generation from current collectors
q_ccn = I_flux^2/p.sig_cu*ones(Nccn,1);
q_ccp = I_flux^2/p.sig_al*ones(Nccp,1);

% heat generation from negative electrode
kappa_n = kappa_calc(ce(1:Nn,1), T(Nccn+1:Nccn+Nn,1))*p.epsilon_e_n^p.brug;
thetan = cs_surf_n/p.c_s_n_max;
[Un, dUndT] = PotentialAnode(thetan, T(Nccn+1:Nccn+Nn,1));

q_ohm_n = p.sig_n*p.epsilon_s_n*dphisndx.^2+kappa_n.*dphiedx(1:Nn,1).^2+...
    2*p.R*T(Nccn+1:Nccn+Nn,1)*(1-p.t_plus).*kappa_n/p.Faraday.*dcedx(1:Nn,1)./...
    ce(1:Nn,1).*dphiedx(1:Nn,1);
q_rxn_n = p.a_s_n*p.Faraday*jn.*(phi_sn-phi_e(1:Nn,1)-Un-p.R_f_n*p.Faraday*jn);
q_rev_n = p.a_s_n*p.Faraday*jn.*T(Nccn+1:Nccn+Nn,1).*dUndT;

q_n = q_ohm_n+q_rxn_n+q_rev_n;

% heat generation from separator
kappa_sep = kappa_calc(ce(Nn+1:Nn+Nsep,1), T(Nccn+Nn+1:Nccn+Nn+Nsep,1))*p.epsilon_e_s^p.brug;

q_ohm_sep = kappa_sep.*dphiedx(Nn+1:Nn+Nsep,1).^2+...
    2*p.R*T(Nccn+Nn+1:Nccn+Nn+Nsep,1)*(1-p.t_plus).*kappa_sep/p.Faraday.*dcedx(Nn+1:Nn+Nsep,1)./...
    ce(Nn+1:Nn+Nsep,1).*dphiedx(Nn+1:Nn+Nsep,1);

q_sep = q_ohm_sep;

% heat generation from postive electrode
kappa_p = kappa_calc(ce(Nn+Nsep+1:end,1), T(Nccn+Nn+Nsep+1:Nccn+Nn+Nsep+Np,1))*p.epsilon_e_p^p.brug;
thetap = cs_surf_p/p.c_s_p_max;
[Up, dUpdT] = PotentialCathode(thetap, T(Nccn+Nn+Nsep+1:Nccn+Nn+Nsep+Np,1));

q_ohm_p = p.sig_p*p.epsilon_s_p*dphispdx.^2+kappa_p.*dphiedx(Nn+Nsep+1:end,1).^2+...
    2*p.R*T(Nccn+Nn+Nsep+1:Nccn+Nn+Nsep+Np,1)*(1-p.t_plus).*kappa_p/p.Faraday.*dcedx(Nn+Nsep+1:end,1)./...
    ce(Nn+Nsep+1:end,1).*dphiedx(Nn+Nsep+1:end,1);
q_rxn_p = p.a_s_p*p.Faraday*jp.*(phi_sp-phi_e(Nn+Nsep+1:end,1)-Up-p.R_f_p*p.Faraday*jp);
q_rev_p = p.a_s_p*p.Faraday*jp.*T(Nccn+Nn+Nsep+1:Nccn+Nn+Nsep+Np,1).*dUpdT;

q_p = q_ohm_p+q_rxn_p+q_rev_p;

q = [q_ccn; q_n; q_sep; q_p; q_ccp];

end